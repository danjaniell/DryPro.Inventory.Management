@model DryPro.Inventory.Management.UI.Models.InventoryCreateViewModel
@using DryPro.Inventory.Management.Common.Enums

@{
    ViewData["Title"] = "Create";
}


<div>
    <a asp-action="Index" class="btn btn-success"></a>
    <h1>Create</h1>
</div>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Product.Type" class="control-label"></label>
                <select asp-for="Product.Type" asp-items="Html.GetEnumSelectList<ProductType>()" class="form-control">
                    <option selected="selected" value="">Please select</option>
                </select>
                <span asp-validation-for="Product.Type" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Color" class="control-label"></label>
                <select asp-for="Product.Color" asp-items="Html.GetEnumSelectList<ProductColor>()" class="form-control">
                    <option selected="selected" value="">Please select</option>
                </select>
                <span asp-validation-for="Product.Color" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.SellingPrice" class="control-label"></label>
                <input asp-for="Product.SellingPrice" class="form-control" />
                <span asp-validation-for="Product.SellingPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.SoldPrice" class="control-label"></label>
                <input asp-for="Product.SoldPrice" class="form-control" />
                <span asp-validation-for="Product.SoldPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Cost" class="control-label"></label>
                <input asp-for="Product.Cost" class="form-control" />
                <span asp-validation-for="Product.Cost" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Discount" class="control-label"></label>
                <input asp-for="Product.Discount" class="form-control" />
                <span asp-validation-for="Product.Discount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Count" class="control-label"></label>
                <input asp-for="Count" class="form-control" min="1" max="255" />
                <span asp-validation-for="Count" class="text-danger"></span>
            </div>
            @*@if (Model.AuxilliaryItems != null)
        {
            @foreach (var auxItem in Model.AuxilliaryItems)
            {
                <div class="form-group">
                    <label asp-for="Product.@auxItem" class="control-label"></label>
                    <input asp-for="Product.@auxItem" class="form-control" />
                    <span asp-validation-for="@auxItem" class="text-danger"></span>
                </div>
            }
        }*@
            <div class="form-group row">
                <div class="col-8 offset-3 row">
                    <div class="col">
                        <input type="submit" class="btn btn-info w-100" value="Create" />
                    </div>
                    <div class="col">
                        <a asp-action="Index" class="btn btn-success w-100">Back</a>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
